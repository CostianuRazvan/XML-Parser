/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.xml.transform.stream.StreamResult;
import xml.parser.XMLParser;

/**
 *
 * @author razvan.costianu
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outputText = new javax.swing.JTextArea();
        parsareButton = new javax.swing.JButton();
        vizualizareXml = new javax.swing.JButton();
        browse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputText.setColumns(20);
        outputText.setRows(5);
        jScrollPane1.setViewportView(outputText);

        parsareButton.setText("Parsare");
        parsareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parsareButtonActionPerformed(evt);
            }
        });

        vizualizareXml.setText("Vizualizare cu XSL");
        vizualizareXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vizualizareXmlActionPerformed(evt);
            }
        });

        browse.setText("BROWSE");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(browse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(parsareButton)
                .addGap(30, 30, 30)
                .addComponent(vizualizareXml)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parsareButton)
                    .addComponent(vizualizareXml)
                    .addComponent(browse))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void parsareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parsareButtonActionPerformed
        outputText.setText(XMLParser.parsare());
    }//GEN-LAST:event_parsareButtonActionPerformed

    private void vizualizareXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vizualizareXmlActionPerformed
 
            XMLParser.viewXSL();
        
    }//GEN-LAST:event_vizualizareXmlActionPerformed

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        try{
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);

        // Show the dialog; wait until dialog is closed
        chooser.showOpenDialog(this);

        // Retrieve the selected files.
        File[] files = chooser.getSelectedFiles();
        for(int i = 0; i< files.length;i++){
            if (files[i].getName().substring(files[i].getName().length()-3, files[i].getName().length()).equals("dtd")){
                FileReader fr = null;
                FileWriter fw = null;
        try {
            fr = new FileReader(files[i]);
            fw = new FileWriter("C:\\Users\\razvan.costianu\\Desktop\\xml\\XML-Parser\\XML-Parser\\src\\xml\\parser\\furnizori.dtd");
            int c = fr.read();
            while(c!=-1) {
                fw.write(c);
                c = fr.read();
            }
        } catch(IOException e) {
            e.printStackTrace();
        }finally {
            fr.close();
            fw.close();
        }
            }else if (files[i].getName().substring(files[i].getName().length()-3, files[i].getName().length()).equals("xml")){
                FileReader fr = null;
                FileWriter fw = null;
        try {
            fr = new FileReader(files[i]);
            fw = new FileWriter("C:\\Users\\razvan.costianu\\Desktop\\xml\\XML-Parser\\XML-Parser\\src\\xml\\parser\\furnizori.xml");
            int c = fr.read();
            while(c!=-1) {
                fw.write(c);
                c = fr.read();
            }
        } catch(IOException e) {
            e.printStackTrace();
        }finally {
            fr.close();
            fw.close();
        }
            }else if (files[i].getName().substring(files[i].getName().length()-3, files[i].getName().length()).equals("xsl")){
                FileReader fr = null;
                FileWriter fw = null;
        try {
            fr = new FileReader(files[i]);
            fw = new FileWriter("C:\\Users\\razvan.costianu\\Desktop\\xml\\XML-Parser\\XML-Parser\\src\\xml\\parser\\furnizori.xsl");
            int c = fr.read();
            while(c!=-1) {
                fw.write(c);
                c = fr.read();
            }
        } catch(IOException e) {
            e.printStackTrace();
        }finally {
            fr.close();
            fw.close();
        }
            }else if (files[i].getName().substring(files[i].getName().length()-3, files[i].getName().length()).equals("xsd")){
                FileReader fr = null;
                FileWriter fw = null;
        try {
            fr = new FileReader(files[i]);
            fw = new FileWriter("C:\\Users\\razvan.costianu\\Desktop\\xml\\XML-Parser\\XML-Parser\\src\\xml\\parser\\validation.xsd");
            int c = fr.read();
            while(c!=-1) {
                fw.write(c);
                c = fr.read();
            }
        } catch(IOException e) {
            e.printStackTrace();
        }finally {
            fr.close();
            fw.close();
        }
            }
        }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_browseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputText;
    private javax.swing.JButton parsareButton;
    private javax.swing.JButton vizualizareXml;
    // End of variables declaration//GEN-END:variables
}
